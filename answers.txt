Michelle Nie

1. If you negate the weights of each edge in the frontier and run the algorithm, it will give you a maximum spanning tree. (Source: http://mathworld.wolfram.com/MaximumSpanningTree.html)

2. Minimum-spanning-tree does not take into account direction like the Traveling Salesman problem requires. In both, the minimum distance is required, but the Traveling Salesman problem also requires returning to the starting point. (Source: https://www.quora.com/What-is-the-difference-between-Travelling-Salesman-Problem-and-Minimum-Spanning-Tree-problem)

3. Adjacency Matrix for Chicago, Detroit, Boston, New York, Philadelphia
Google Sheet: https://docs.google.com/spreadsheets/d/1zdP7VNbHtWcc3x6KU8lyT1YSy82wao-d7yak0xK4VNg/edit?usp=sharing

4. What is the Big-O time complexity of Jarnik's algorithm when a priority queue (binary heap) is used? What about when it is not used? Why is there a difference?

5. Why is Jarnik's algorithm a greedy algorithm?

6. Jarnik's algorithm is commonly known as Prim's algorithm, even though Jarnik discovered it and published it decades before Prim rediscovered it. Research another algorithm that has a different common name from its original discoverer. What is the purpose of the algorithm and why did its original creator not get credit?